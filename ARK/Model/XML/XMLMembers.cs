// <auto-generated />

using System;
using System.Xml.Serialization;

namespace ARK.Model.XML
{
    public class XMLMembers
    {
        #region Enums

        /// <remarks/>
        [XmlType(IncludeInSchema = false)]
        public enum ItemsChoiceType
        {
            /// <remarks/>
            Adresse1, 

            /// <remarks/>
            Adresse2, 

            /// <remarks/>
            By, 

            /// <remarks/>
            EMail, 

            /// <remarks/>
            EMail2, 

            /// <remarks/>
            Efternavn, 

            /// <remarks/>
            Fornavn, 

            /// <remarks/>
            Frigivet, 

            /// <remarks/>
            FrigivetDato, 

            /// <remarks/>
            Fødselsdato, 

            /// <remarks/>
            ID, 

            /// <remarks/>
            Kajakret, 

            /// <remarks/>
            KajakretDato, 

            /// <remarks/>
            Korttursstyrmand, 

            /// <remarks/>
            KorttursstyrmandDato, 

            /// <remarks/>
            Langtursstyrmand, 

            /// <remarks/>
            LangtursstyrmandDato, 

            /// <remarks/>
            MedlemsNr, 

            /// <remarks/>
            Outriggerret, 

            /// <remarks/>
            OutriggerretDato, 

            /// <remarks/>
            PostNr, 

            /// <remarks/>
            Scullerret, 

            /// <remarks/>
            ScullerretDato, 

            /// <remarks/>
            Svømmeprøve, 

            /// <remarks/>
            SvømmeprøveDato, 

            /// <remarks/>
            Telefon, 

            /// <remarks/>
            TelefonArbejde, 

            /// <remarks/>
            TelefonMobil, 
        }

        #endregion

        /// <remarks/>
        [XmlType(AnonymousType = true)]
        [XmlRoot(Namespace = "", IsNullable = false)]
        public partial class dataroot
        {
            #region Fields

            private DateTime generatedField;

            #endregion

            #region Public Properties

            /// <remarks/>
            [XmlElement("AktiveMedlemmer")]
            public datarootAktiveMedlemmer[] activeMembers { get; set; }

            /// <remarks/>
            [XmlAttribute()]
            public DateTime generated
            {
                get
                {
                    return this.generatedField;
                }

                set
                {
                    this.generatedField = value;
                }
            }

            #endregion
        }

        /// <remarks/>
        [XmlType(AnonymousType = true)]
        public partial class datarootAktiveMedlemmer
        {
            #region Public Properties

            /// <remarks/>
            [XmlElement("Adresse1", typeof(string))]
            [XmlElement("Adresse2", typeof(string))]
            [XmlElement("By", typeof(string))]
            [XmlElement("EMail", typeof(string))]
            [XmlElement("EMail2", typeof(string))]
            [XmlElement("Efternavn", typeof(string))]
            [XmlElement("Fornavn", typeof(string))]
            [XmlElement("Frigivet", typeof(byte))]
            [XmlElement("FrigivetDato", typeof(DateTime))]
            [XmlElement("Fødselsdato", typeof(DateTime))]
            [XmlElement("ID", typeof(ushort))]
            [XmlElement("Kajakret", typeof(byte))]
            [XmlElement("KajakretDato", typeof(DateTime))]
            [XmlElement("Korttursstyrmand", typeof(byte))]
            [XmlElement("KorttursstyrmandDato", typeof(DateTime))]
            [XmlElement("Langtursstyrmand", typeof(byte))]
            [XmlElement("LangtursstyrmandDato", typeof(DateTime))]
            [XmlElement("MedlemsNr", typeof(byte))]
            [XmlElement("Outriggerret", typeof(byte))]
            [XmlElement("OutriggerretDato", typeof(DateTime))]
            [XmlElement("PostNr", typeof(ushort))]
            [XmlElement("Scullerret", typeof(byte))]
            [XmlElement("ScullerretDato", typeof(DateTime))]
            [XmlElement("Svømmeprøve", typeof(byte))]
            [XmlElement("SvømmeprøveDato", typeof(DateTime))]
            [XmlElement("Telefon", typeof(string))]
            [XmlElement("TelefonArbejde", typeof(string))]
            [XmlElement("TelefonMobil", typeof(string))]
            [XmlChoiceIdentifier("ItemsElementName")]
            public object[] Items { get; set; }

            /// <remarks/>
            [XmlElement("ItemsElementName")]
            [XmlIgnore()]
            public ItemsChoiceType[] ItemsElementName { get; set; }

            #endregion

            #region Public Methods and Operators

            public object GetObjFromName(ItemsChoiceType name)
            {
                object obj;
                try
                {
                    obj = this.Items[Array.IndexOf(this.ItemsElementName, name)];
                }
                catch (IndexOutOfRangeException)
                {
                    obj = null;
                }

                return obj;
            }

            #endregion
        }
    }
}